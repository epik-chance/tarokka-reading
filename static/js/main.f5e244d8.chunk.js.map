{"version":3,"sources":["Components/Card/CardArt/Abjurer.png","Components/Card/CardArt/Anarchist.png","Components/Card/CardArt/Artifact.png","Components/Card/CardArt/Avenger.png","Components/Card/CardArt/Beast.png","Components/Card/CardArt/Beggar.png","Components/Card/CardArt/Berserker.png","Components/Card/CardArt/Bishop.png","Components/Card/CardArt/BrokenOne.png","Components/Card/CardArt/Charlatan.png","Components/Card/CardArt/Conjurer.png","Components/Card/CardArt/Darklord.png","Components/Card/CardArt/Dictator.png","Components/Card/CardArt/Diviner.png","Components/Card/CardArt/Donjon.png","Components/Card/CardArt/Druid.png","Components/Card/CardArt/Elementalist.png","Components/Card/CardArt/Enchanter.png","Components/Card/CardArt/Evoker.png","Components/Card/CardArt/Executioner.png","Components/Card/CardArt/Ghost.png","Components/Card/CardArt/GuildMember.png","Components/Card/CardArt/Healer.png","Components/Card/CardArt/HoodedOne.png","Components/Card/CardArt/Horseman.png","Components/Card/CardArt/Illusionist.png","Components/Card/CardArt/Innocent.png","Components/Card/CardArt/Marionette.png","Components/Card/CardArt/Mercenary.png","Components/Card/CardArt/Merchant.png","Components/Card/CardArt/Miser.png","Components/Card/CardArt/Missionary.png","Components/Card/CardArt/Mists.png","Components/Card/CardArt/Monk.png","Components/Card/CardArt/Myrmidon.png","Components/Card/CardArt/Necromancer.png","Components/Card/CardArt/Paladin.png","Components/Card/CardArt/Philanthrophist.png","Components/Card/CardArt/Priest.png","Components/Card/CardArt/Raven.png","Components/Card/CardArt/Rogue.png","Components/Card/CardArt/Seer.png","Components/Card/CardArt/Shepard.png","Components/Card/CardArt/Soldier.png","Components/Card/CardArt/Swashbuckler.png","Components/Card/CardArt/TaxCollector.png","Components/Card/CardArt/Tempter.png","Components/Card/CardArt/Thief.png","Components/Card/CardArt/Torturer.png","Components/Card/CardArt/Trader.png","Components/Card/CardArt/Traitor.png","Components/Card/CardArt/Transmuter.png","Components/Card/CardArt/Warrior.png","Components/Card/CardArt/Wizard.png","Components/Card/cardInfo.js","Components/Card/CardArt/CardBack.png","Components/Card/index.jsx","Components/SetupCard/index.jsx","Components/ChoiceCard/index.jsx","Components/Patterns/Cross/index.jsx","Components/Patterns/index.jsx","Components/PlayArea/index.jsx","Components/SelectCard/index.jsx","Components/SelectArea/index.jsx","Reading/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["cardInfo","Abjurer","Anarchist","Artifact","Avenger","Beast","Beggar","Berserker","Bishop","BrokenOne","Charlatan","Conjurer","Darklord","Dictator","Diviner","Donjon","Druid","Elementalist","Enchanter","Evoker","Executioner","Ghost","GuildMember","Healer","HoodedOne","Horseman","Illusionist","Innocent","Marionette","Mercenary","Merchant","Miser","Missionary","Mists","Monk","Myrmidon","Necromancer","Paladin","Philanthrophist","Priest","Raven","Rogue","Seer","Shepherd","Soldier","Swashbuckler","TaxCollector","Tempter","Thief","Torturer","Trader","Traitor","Transmuter","Warrior","Wizard","highDeck","commonDeck","swords","coins","stars","glyphs","Card","props","className","classNames","active","onClick","event","target","classList","toggle","style","backgroundImage","art","SetupCard","useState","deckChoice","setDeckChoice","Dropdown","placeholder","fluid","search","selection","onChange","value","options","key","text","localStorage","setItem","cardKey","JSON","stringify","deck","card","deckOptions","deckValue","Object","keys","cardOptions","map","x","getCardOptions","ChoiceCard","isDMCard","Cross","swordsDeck","setSwordsDeck","coinsDeck","setCoinsDeck","starsDeck","setStarsDeck","glyphsDeck","setGlyphsDeck","commonDeckList","setCommonDeck","highDeckList","setHighDeck","allCardsList","setAllCards","useEffect","shuffledSwordsDeck","values","sort","Math","random","shuffledCoinsDeck","shuffledStarsDeck","shuffledGlyphsDeck","shuffledCommonDeck","shuffledHighDeck","allCards","getCardInfo","index","defaultDeck","savedCardInfo","parse","getItem","getCard","localeCompare","sensitivity","cross1","cross2","cross3","cross4","cross5","cardTwoActive","cardOneActive","cardFiveActive","cardThreeActive","cardFourActive","Patterns","PlayArea","SelectCard","selected","setSelected","onResetProp","onReset","resetProp","reset","timer","setTimeout","clearTimeout","onSelect","dataKey","SelectArea","isActive","setActive","isDeckSpread","setDeckSpread","numCardsChosen","setNumCardsChosen","setReset","deckSpreadTimer","setStyle","i","left","window","innerWidth","rotation","length","translateY","abs","transform","startReset","onSelectCard","opacity","Array","from","_","Reading","setCardOneActive","setCardTwoActive","setCardThreeActive","setCardFourActive","setCardFiveActive","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5e244d8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Abjurer.2218a4fb.png\";","export default __webpack_public_path__ + \"static/media/Anarchist.d53963a6.png\";","export default __webpack_public_path__ + \"static/media/Artifact.f9ab7adc.png\";","export default __webpack_public_path__ + \"static/media/Avenger.bc5738d3.png\";","export default __webpack_public_path__ + \"static/media/Beast.85653e8a.png\";","export default __webpack_public_path__ + \"static/media/Beggar.513ca3f0.png\";","export default __webpack_public_path__ + \"static/media/Berserker.2e0f0aa3.png\";","export default __webpack_public_path__ + \"static/media/Bishop.70db5d45.png\";","export default __webpack_public_path__ + \"static/media/BrokenOne.73efaebf.png\";","export default __webpack_public_path__ + \"static/media/Charlatan.5ff1a0a6.png\";","export default __webpack_public_path__ + \"static/media/Conjurer.a9766585.png\";","export default __webpack_public_path__ + \"static/media/Darklord.244b4034.png\";","export default __webpack_public_path__ + \"static/media/Dictator.6de34654.png\";","export default __webpack_public_path__ + \"static/media/Diviner.d563c5b9.png\";","export default __webpack_public_path__ + \"static/media/Donjon.fe2c8f5a.png\";","export default __webpack_public_path__ + \"static/media/Druid.3dc07efe.png\";","export default __webpack_public_path__ + \"static/media/Elementalist.a5463b5d.png\";","export default __webpack_public_path__ + \"static/media/Enchanter.a9de78bd.png\";","export default __webpack_public_path__ + \"static/media/Evoker.6768ad93.png\";","export default __webpack_public_path__ + \"static/media/Executioner.1e00d548.png\";","export default __webpack_public_path__ + \"static/media/Ghost.d94da763.png\";","export default __webpack_public_path__ + \"static/media/GuildMember.56db41a9.png\";","export default __webpack_public_path__ + \"static/media/Healer.bd280d64.png\";","export default __webpack_public_path__ + \"static/media/HoodedOne.cc8160f2.png\";","export default __webpack_public_path__ + \"static/media/Horseman.bf0244f1.png\";","export default __webpack_public_path__ + \"static/media/Illusionist.a5fc99af.png\";","export default __webpack_public_path__ + \"static/media/Innocent.7b958ddc.png\";","export default __webpack_public_path__ + \"static/media/Marionette.c8e08131.png\";","export default __webpack_public_path__ + \"static/media/Mercenary.00ddf11a.png\";","export default __webpack_public_path__ + \"static/media/Merchant.fa8de703.png\";","export default __webpack_public_path__ + \"static/media/Miser.9e1f2dbb.png\";","export default __webpack_public_path__ + \"static/media/Missionary.26c9d0bc.png\";","export default __webpack_public_path__ + \"static/media/Mists.3aa67760.png\";","export default __webpack_public_path__ + \"static/media/Monk.84c24f73.png\";","export default __webpack_public_path__ + \"static/media/Myrmidon.caee046d.png\";","export default __webpack_public_path__ + \"static/media/Necromancer.c8ec1860.png\";","export default __webpack_public_path__ + \"static/media/Paladin.289a72c4.png\";","export default __webpack_public_path__ + \"static/media/Philanthrophist.d18a3f36.png\";","export default __webpack_public_path__ + \"static/media/Priest.2d5cedb0.png\";","export default __webpack_public_path__ + \"static/media/Raven.86f586ea.png\";","export default __webpack_public_path__ + \"static/media/Rogue.7681b8cb.png\";","export default __webpack_public_path__ + \"static/media/Seer.141ae07e.png\";","export default __webpack_public_path__ + \"static/media/Shepard.4443979c.png\";","export default __webpack_public_path__ + \"static/media/Soldier.d8047b45.png\";","export default __webpack_public_path__ + \"static/media/Swashbuckler.22ca10c2.png\";","export default __webpack_public_path__ + \"static/media/TaxCollector.2d6d6328.png\";","export default __webpack_public_path__ + \"static/media/Tempter.b49e2a77.png\";","export default __webpack_public_path__ + \"static/media/Thief.071a6326.png\";","export default __webpack_public_path__ + \"static/media/Torturer.9de7d066.png\";","export default __webpack_public_path__ + \"static/media/Trader.ac183011.png\";","export default __webpack_public_path__ + \"static/media/Traitor.7f6c9cc2.png\";","export default __webpack_public_path__ + \"static/media/Transmuter.b52e0837.png\";","export default __webpack_public_path__ + \"static/media/Warrior.b7a8d5a9.png\";","export default __webpack_public_path__ + \"static/media/Wizard.79d13e0f.png\";","import Abjurer from './CardArt/Abjurer.png';\r\nimport Anarchist from './CardArt/Anarchist.png';\r\nimport Artifact from './CardArt/Artifact.png';\r\nimport Avenger from './CardArt/Avenger.png';\r\nimport Beast from './CardArt/Beast.png';\r\nimport Beggar from './CardArt/Beggar.png';\r\nimport Berserker from './CardArt/Berserker.png';\r\nimport Bishop from './CardArt/Bishop.png';\r\nimport BrokenOne from './CardArt/BrokenOne.png';\r\nimport Charlatan from './CardArt/Charlatan.png';\r\nimport Conjurer from './CardArt/Conjurer.png';\r\nimport Darklord from './CardArt/Darklord.png';\r\nimport Dictator from './CardArt/Dictator.png';\r\nimport Diviner from './CardArt/Diviner.png';\r\nimport Donjon from './CardArt/Donjon.png';\r\nimport Druid from './CardArt/Druid.png';\r\nimport Elementalist from './CardArt/Elementalist.png';\r\nimport Enchanter from './CardArt/Enchanter.png';\r\nimport Evoker from './CardArt/Evoker.png';\r\nimport Executioner from './CardArt/Executioner.png';\r\nimport Ghost from './CardArt/Ghost.png';\r\nimport GuildMember from './CardArt/GuildMember.png';\r\nimport Healer from './CardArt/Healer.png';\r\nimport HoodedOne from './CardArt/HoodedOne.png';\r\nimport Horseman from './CardArt/Horseman.png';\r\nimport Illusionist from './CardArt/Illusionist.png';\r\nimport Innocent from './CardArt/Innocent.png';\r\nimport Marionette from './CardArt/Marionette.png';\r\nimport Mercenary from './CardArt/Mercenary.png';\r\nimport Merchant from './CardArt/Merchant.png';\r\nimport Miser from './CardArt/Miser.png';\r\nimport Missionary from './CardArt/Missionary.png';\r\nimport Mists from './CardArt/Mists.png';\r\nimport Monk from './CardArt/Monk.png';\r\nimport Myrmidon from './CardArt/Myrmidon.png';\r\nimport Necromancer from './CardArt/Necromancer.png';\r\nimport Paladin from './CardArt/Paladin.png';\r\nimport Philanthrophist from './CardArt/Philanthrophist.png';\r\nimport Priest from './CardArt/Priest.png';\r\nimport Raven from './CardArt/Raven.png';\r\nimport Rogue from './CardArt/Rogue.png';\r\nimport Seer from './CardArt/Seer.png';\r\nimport Shepherd from './CardArt/Shepard.png';\r\nimport Soldier from './CardArt/Soldier.png';\r\nimport Swashbuckler from './CardArt/Swashbuckler.png';\r\nimport TaxCollector from './CardArt/TaxCollector.png';\r\nimport Tempter from './CardArt/Tempter.png';\r\nimport Thief from './CardArt/Thief.png';\r\nimport Torturer from './CardArt/Torturer.png';\r\nimport Trader from './CardArt/Trader.png';\r\nimport Traitor from './CardArt/Traitor.png';\r\nimport Transmuter from './CardArt/Transmuter.png';\r\nimport Warrior from './CardArt/Warrior.png';\r\nimport Wizard from './CardArt/Wizard.png';\r\nimport CardBack from './CardArt/CardBack.png';\r\n\r\nconst cardInfo = {\r\n  Abjurer,\r\n  Anarchist,\r\n  Artifact,\r\n  Avenger,\r\n  Beast,\r\n  Beggar,\r\n  Berserker,\r\n  Bishop,\r\n  BrokenOne,\r\n  Charlatan,\r\n  Conjurer,\r\n  Darklord,\r\n  Dictator,\r\n  Diviner,\r\n  Donjon,\r\n  Druid,\r\n  Elementalist,\r\n  Enchanter,\r\n  Evoker,\r\n  Executioner,\r\n  Ghost,\r\n  GuildMember,\r\n  Healer,\r\n  HoodedOne,\r\n  Horseman,\r\n  Illusionist,\r\n  Innocent,\r\n  Marionette,\r\n  Mercenary,\r\n  Merchant,\r\n  Miser,\r\n  Missionary,\r\n  Mists,\r\n  Monk,\r\n  Myrmidon,\r\n  Necromancer,\r\n  Paladin,\r\n  Philanthrophist,\r\n  Priest,\r\n  Raven,\r\n  Rogue,\r\n  Seer,\r\n  Shepherd,\r\n  Soldier,\r\n  Swashbuckler,\r\n  TaxCollector,\r\n  Tempter,\r\n  Thief,\r\n  Torturer,\r\n  Trader,\r\n  Traitor,\r\n  Transmuter,\r\n  Warrior,\r\n  Wizard,\r\n  // CardBack\r\n}\r\n\r\nconst highDeck = {\r\n  Artifact,\r\n  Executioner,\r\n  Beast,\r\n  Horseman,\r\n  BrokenOne,\r\n  Innocent,\r\n  Darklord,\r\n  Marionette,\r\n  Donjon,\r\n  Mists,\r\n  Seer,\r\n  Raven,\r\n  Ghost,\r\n  Tempter,\r\n}\r\n\r\nconst swords = {\r\n  Warrior,\r\n  Avenger,\r\n  Paladin,\r\n  Soldier,\r\n  Mercenary,\r\n  Myrmidon,\r\n  Berserker,\r\n  HoodedOne,\r\n  Dictator,\r\n  Torturer,\r\n}\r\n\r\nconst coins = {\r\n  Rogue,\r\n  Swashbuckler,\r\n  Philanthrophist,\r\n  Trader,\r\n  Merchant,\r\n  GuildMember,\r\n  Beggar,\r\n  Thief,\r\n  TaxCollector,\r\n  Miser,\r\n}\r\n\r\nconst stars = {\r\n  Wizard,\r\n  Transmuter,\r\n  Diviner,\r\n  Enchanter,\r\n  Abjurer,\r\n  Elementalist,\r\n  Evoker,\r\n  Illusionist,\r\n  Necromancer,\r\n  Conjurer,\r\n}\r\n\r\nconst glyphs = {\r\n  Priest,\r\n  Monk,\r\n  Missionary,\r\n  Healer,\r\n  Shepherd,\r\n  Druid,\r\n  Anarchist,\r\n  Charlatan,\r\n  Bishop,\r\n  Traitor,\r\n}\r\n\r\nconst commonDeck = {\r\n swords,\r\n coins,\r\n stars,\r\n glyphs,\r\n}\r\n\r\nexport default cardInfo;\r\nexport { cardInfo, highDeck, commonDeck }","export default __webpack_public_path__ + \"static/media/CardBack.1fe7182a.png\";","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './card.css'\r\n\r\nfunction Card(props) {\r\n\r\n\r\n  const flipCard = (event) => {\r\n    if (props.active) {\r\n    \r\n      if (!event || !event.target)\r\n        return;\r\n      \r\n      const target = event.target;\r\n      target.classList.toggle('flipped')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classNames('card', {active: props.active})} onClick={ flipCard }>\r\n      <div className=\"cardInner\">\r\n        <div className=\"cardFront\" style={{backgroundImage: `url(${props.art}`}} />\r\n        <div className=\"cardBack\" />  \r\n      </div> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React, { useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Dropdown } from 'semantic-ui-react';\r\n\r\nimport {cardInfo, commonDeck, highDeck} from '../../Components/Card/cardInfo'\r\n\r\nimport './setupCard.css'\r\n\r\nfunction SetupCard(props) {\r\n\r\n  const [deckChoice, setDeckChoice] = useState(0)\r\n\r\n  const deckOptions = [\r\n    {key: 'allDecks', value:  0, text: 'All Decks'},\r\n    {key: 'high', value: 1, text: 'High Deck'},\r\n    {key: 'common', value: 2, text: 'Common Deck'},\r\n    {key: 'swords', value: 3, text: 'Swords Deck'},\r\n    {key: 'stars', value: 4, text: 'Stars Deck'},\r\n    {key: 'coins', value: 5, text: 'Coins Deck'},\r\n    {key: 'glyphs', value: 6, text: 'Glyphs Deck'},\r\n  ]\r\n\r\n  const cardOptions = (deckValue) => {\r\n    switch(deckValue) {\r\n      default:\r\n      case 0:\r\n        return Object.keys(cardInfo);\r\n      case 1:\r\n        return Object.keys(highDeck);\r\n      case 2:\r\n        return [\r\n          ...Object.keys(commonDeck.swords),\r\n          ...Object.keys(commonDeck.coins),\r\n          ...Object.keys(commonDeck.stars),\r\n          ...Object.keys(commonDeck.glyphs)\r\n        ]\r\n      case 3:\r\n        return Object.keys(commonDeck.swords);\r\n      case 4:\r\n        return Object.keys(commonDeck.stars);\r\n      case 5:\r\n        return Object.keys(commonDeck.coins);\r\n      case 6:\r\n        return Object.keys(commonDeck.glyphs);\r\n    }\r\n  }\r\n\r\n  const getCardOptions = () => {\r\n    const deck = cardOptions(deckChoice);\r\n    const deckOptions = deck.map((x) => {\r\n      return ({\r\n        key: x,\r\n        value: x,\r\n        text: x,\r\n      })\r\n    })\r\n    return [...deckOptions, {key: 'random', value: 'Random', text: 'Random'}];\r\n  }\r\n\r\n  const onChangeDeck = (event, {value}) => {\r\n    setDeckChoice(value);\r\n  }\r\n\r\n  const onChangeCard = (event, {value}) => {\r\n    localStorage.setItem(props.cardKey, JSON.stringify({deck: deckChoice, card: value}));\r\n  }\r\n\r\n  return (\r\n    <div className={classNames('setupCard', {active: true})}>\r\n      <div className=\"cardInner\">\r\n        <div className=\"selections\">\r\n          <Dropdown\r\n            placeholder='Deck'\r\n            fluid\r\n            search\r\n            selection\r\n            onChange={onChangeDeck}\r\n            options={deckOptions}\r\n          />\r\n\r\n          <Dropdown\r\n            placeholder='Card'\r\n            fluid\r\n            search\r\n            selection\r\n            onChange={onChangeCard}\r\n            options={getCardOptions()}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"cardBack\" />  \r\n      </div> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SetupCard;","import { React, useState } from 'react';\r\n\r\nimport Card from '../Card';\r\nimport SetupCard from '../SetupCard';\r\n\r\n\r\nfunction ChoiceCard(props) {\r\n  const isDMCard = props.isDMCard;\r\n  const cardKey = props.cardKey;\r\n  const active = props.active;\r\n  const art = props.art;\r\n\r\n  if (isDMCard) {\r\n    return (\r\n      <SetupCard cardKey={cardKey} />\r\n    )\r\n  } else {\r\n    return (\r\n      <Card art={art} active={active} cardKey={cardKey} />\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default ChoiceCard;  ","import {React, useState, useEffect } from 'react';\r\n\r\nimport ChoiceCard from '../../ChoiceCard'\r\n\r\nimport {cardInfo, highDeck, commonDeck} from '../../Card/cardInfo';\r\n\r\nfunction Cross(props) {\r\n\r\n\r\n\r\n  const [swordsDeck, setSwordsDeck] = useState([]);\r\n  const [coinsDeck, setCoinsDeck] = useState([]);\r\n  const [starsDeck, setStarsDeck] = useState([]);\r\n  const [glyphsDeck, setGlyphsDeck] = useState([]);\r\n  const [commonDeckList, setCommonDeck] = useState([]);\r\n  const [highDeckList, setHighDeck] = useState([]);\r\n  const [allCardsList, setAllCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const shuffledSwordsDeck = Object.values(commonDeck.swords).sort(() => 0.5 - Math.random());\r\n    const shuffledCoinsDeck = Object.values(commonDeck.coins).sort(() => 0.5 - Math.random());\r\n    const shuffledStarsDeck = Object.values(commonDeck.stars).sort(() => 0.5 - Math.random());\r\n    const shuffledGlyphsDeck = Object.values(commonDeck.glyphs).sort(() => 0.5 - Math.random());\r\n    const shuffledCommonDeck = [\r\n      ...shuffledCoinsDeck,\r\n      ...shuffledGlyphsDeck,\r\n      ...shuffledStarsDeck,\r\n      ...shuffledSwordsDeck\r\n    ].sort(() => 0.5 - Math.random());\r\n    const shuffledHighDeck = Object.values(highDeck).sort(() => 0.5 - Math.random());\r\n    const allCards = [...shuffledCommonDeck, ...shuffledHighDeck].sort(() => 0.5 - Math.random());\r\n\r\n    setSwordsDeck(shuffledSwordsDeck);\r\n    setCoinsDeck(shuffledCoinsDeck);\r\n    setStarsDeck(shuffledStarsDeck);\r\n    setGlyphsDeck(shuffledGlyphsDeck);\r\n    setCommonDeck(shuffledCommonDeck);\r\n    setHighDeck(shuffledHighDeck);\r\n    setAllCards(allCards);\r\n  }, [])\r\n\r\n  const getCardInfo = (cardKey, index, defaultDeck) => {\r\n    const savedCardInfo = JSON.parse(localStorage.getItem(cardKey));\r\n    const deck = savedCardInfo?.deck || defaultDeck || 0;\r\n    const card = savedCardInfo?.card || 'random';\r\n\r\n    switch (deck) {\r\n      default:\r\n      case 0:\r\n        return getCard(allCardsList, card, index);\r\n      case 1:\r\n        return getCard(highDeckList, card, index);\r\n      case 2:\r\n        return getCard(commonDeckList, card, index);\r\n      case 3:\r\n        return getCard(swordsDeck, card, index);\r\n      case 4:\r\n        return getCard(starsDeck, card, index);\r\n      case 5:\r\n        return getCard(coinsDeck, card, index);\r\n      case 6:\r\n        return getCard(glyphsDeck, card, index);\r\n    }\r\n  }\r\n\r\n  const getCard = (deck, card, index) => {\r\n    if(card.localeCompare('random', 'en', { sensitivity: 'base'  }) === 0) {\r\n      return deck[index]\r\n      \r\n    } else {\r\n      return cardInfo[card];\r\n    }\r\n  }\r\n\r\n  const cross1 = getCardInfo('cross1', 1, 2);\r\n  const cross2 = getCardInfo('cross2', 2, 2);\r\n  const cross3 = getCardInfo('cross3', 3, 2);\r\n  const cross4 = getCardInfo('cross4', 4, 1);\r\n  const cross5 = getCardInfo('cross5', 5, 1);\r\n\r\n  return (\r\n    <div className=\"patternContainer\">\r\n      <div className=\"row\">\r\n        <ChoiceCard art={cross2} cardKey='cross2' active={props.cardTwoActive} isDMCard={props.isDMCard}/>\r\n      </div>\r\n      <div className=\"row\">\r\n        <ChoiceCard art={cross1} cardKey='cross1' active={props.cardOneActive} isDMCard={props.isDMCard}/>\r\n        <ChoiceCard art={cross5} cardKey='cross5' active={props.cardFiveActive} isDMCard={props.isDMCard}/>\r\n        <ChoiceCard art={cross3} cardKey='cross3' active={props.cardThreeActive} isDMCard={props.isDMCard}/>\r\n      </div>\r\n      <div className=\"row\"> \r\n        <ChoiceCard art={cross4} cardKey='cross4' active={props.cardFourActive} isDMCard={props.isDMCard}  />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cross;","import {React, useState, useEffect} from 'react';\r\n\r\nimport Cross from './Cross';\r\n\r\nimport './patterns.css';\r\n\r\nfunction Patterns(props) {\r\n\r\n\r\n  return (<Cross {...props} />)\r\n}\r\n\r\nexport default Patterns;","import {React, useEffect, useState} from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport cardInfo from '../Card/cardInfo';\r\nimport Card from '../Card';\r\nimport SetupCard from '../SetupCard';\r\nimport Patterns from '../Patterns';\r\n\r\nimport './playArea.css';\r\n\r\nfunction PlayArea(props) {\r\n  return (\r\n    <div className='playArea'>\r\n      <div className=\"backgroundImage\" />\r\n      <Patterns {...props} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlayArea;","import React, { useEffect, useState } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport './selectCard.css'\r\n\r\nfunction SelectCard(props) {\r\n\r\n  const [selected, setSelected] = useState(false);\r\n\r\n  const onSelect = () => {\r\n    props.onSelect();\r\n    setSelected(true);\r\n  }\r\n\r\n  const onResetProp = props.onReset;\r\n  const resetProp = props.reset;\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    const onReset = () => {\r\n      onResetProp();\r\n      timer = setTimeout(() => {\r\n        setSelected(false);\r\n      }, 2000)\r\n\r\n    }\r\n\r\n    if(resetProp)\r\n    {\r\n      onReset();\r\n    }\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [resetProp, onResetProp])\r\n\r\n  return (\r\n    <>\r\n      \r\n      <div \r\n        className={classNames('selectCard',{active: props.active}, {selected: selected}, props.className)}\r\n        style={props.style}\r\n        onClick={onSelect}\r\n        >\r\n        <div className={classNames('label')}>{props.dataKey + 1}</div>\r\n        <div className=\"selectCardInner\">\r\n          <div className=\"selectCardBack\" />  \r\n        </div> \r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SelectCard;","import {React, useEffect, useState} from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport SelectCard from '../SelectCard';\r\n\r\nimport './selectArea.css'\r\n\r\nfunction SelectArea(props) {\r\n  const [isActive, setActive] = useState(false);\r\n  const [isDeckSpread, setDeckSpread] = useState(false);\r\n  const [numCardsChosen, setNumCardsChosen] = useState(0);\r\n  const [reset, setReset] = useState(false);\r\n\r\n  const length = 20;\r\n\r\n  useEffect(() => {\r\n    let deckSpreadTimer;\r\n    const timer = setTimeout(() => {\r\n      setActive(true)\r\n      deckSpreadTimer = setTimeout(() => {\r\n        setDeckSpread(true);\r\n      }, 1000)\r\n    }, 1000)\r\n    return () => {\r\n      clearTimeout(timer);\r\n      clearTimeout(deckSpreadTimer);\r\n    }\r\n  }, []);\r\n\r\n  const setStyle = (i) => {\r\n    const documentWidth = window.innerWidth * 0.96;\r\n    const left = (documentWidth - 267.5) * i / length;\r\n    const midPoint = length / 2;\r\n    const rotation = (i - midPoint) * 1.5;\r\n    const translateY = (Math.abs(i - midPoint) * 7) - 20;\r\n    const transform = `rotate(${rotation}deg) translateY(${translateY}px) rotate(${rotation / 4}deg)`\r\n    let style = {\r\n      left: 0\r\n    }\r\n    if (isDeckSpread) {\r\n      style = {\r\n        left,\r\n        transform,\r\n      }\r\n    }\r\n\r\n    return style;\r\n  }\r\n\r\n  const areaActive = {\r\n    opacity: 1\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(numCardsChosen >= 5) {\r\n      setTimeout(() => {\r\n        setDeckSpread(false);\r\n        setTimeout(() => {\r\n          setActive(false);\r\n          startReset();\r\n        }, 2000);\r\n      }, 2000)\r\n    }\r\n  }, [numCardsChosen])\r\n\r\n  const onSelect= () => {\r\n    props.onSelectCard();\r\n    setNumCardsChosen(numCardsChosen + 1);\r\n  }\r\n\r\n  const startReset = () => {\r\n    setNumCardsChosen(0);\r\n    setReset(true);\r\n  }\r\n\r\n  const onReset = () => {\r\n    setReset(false);\r\n  }\r\n\r\nif(props.active) {\r\n  return (\r\n    <div className='selectArea' style={isActive ? areaActive : {}}>\r\n      { Array.from(new Array(length), (_, i) => ( \r\n        <SelectCard\r\n          key={i}\r\n          dataKey={i}\r\n          style={setStyle(i)}\r\n          onSelect={onSelect}\r\n          onReset={onReset}\r\n          reset={reset}\r\n          className={classNames({'spread': isDeckSpread})}\r\n        />  \r\n      )) }\r\n    </div>\r\n  )\r\n} else {\r\n  return ([]);\r\n}\r\n\r\n}\r\n\r\nexport default SelectArea;","import {React, useState, useEffect} from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\n\r\n\r\nimport PlayArea from '../Components/PlayArea'\r\nimport SelectArea from '../Components/SelectArea'\r\n\r\nimport './reading.css'\r\n\r\nfunction Reading(props) {\r\n\r\n  const [numCardsChosen, setNumCardsChosen] =   useState(0);\r\n  const [cardOneActive, setCardOneActive] = useState(false);\r\n  const [cardTwoActive, setCardTwoActive] = useState(false);\r\n  const [cardThreeActive, setCardThreeActive] = useState(false);\r\n  const [cardFourActive, setCardFourActive] = useState(false);\r\n  const [cardFiveActive, setCardFiveActive] = useState(false);\r\n\r\n  const onSelectFromSelectArea = () => {\r\n    setNumCardsChosen(numCardsChosen + 1);\r\n  }\r\n\r\n  useEffect(() => {\r\n    switch(numCardsChosen) {\r\n      case 0:\r\n      default:\r\n        break;\r\n      case 1:\r\n        setCardOneActive(true)\r\n        break;\r\n      case 2:\r\n        setCardTwoActive(true)\r\n        break;\r\n      case 3:\r\n        setCardThreeActive(true)\r\n        break;\r\n      case 4:\r\n        setCardFourActive(true)\r\n        break;\r\n      case 5:\r\n        setCardFiveActive(true)\r\n        break;\r\n    }\r\n  }, [numCardsChosen])\r\n\r\n  return (\r\n    <div className='reading'>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/DMScreen\">\r\n              <PlayArea \r\n                cardOneActive={cardOneActive}\r\n                cardTwoActive={cardTwoActive}\r\n                cardThreeActive={cardThreeActive}\r\n                cardFourActive={cardFourActive}\r\n                cardFiveActive={cardFiveActive}\r\n                isDMCard={true}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <SelectArea active={true} onSelectCard={onSelectFromSelectArea} />\r\n              <PlayArea \r\n                cardOneActive={cardOneActive}\r\n                cardTwoActive={cardTwoActive}\r\n                cardThreeActive={cardThreeActive}\r\n                cardFourActive={cardFourActive}\r\n                cardFiveActive={cardFiveActive}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n\r\n        </Router>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Reading\r\n","import 'semantic-ui-css/semantic.min.css'\n\nimport Reading from './Reading'\n\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Reading />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}